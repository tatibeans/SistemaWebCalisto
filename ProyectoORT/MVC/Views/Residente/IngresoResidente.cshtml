@model MVC.Models.ModeloResidente

<div class="modal fade " id="errorIngresoRes" tabindex="-1" data-backdrop="static" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Error</h4>
            </div>
            <div class="modal-body">
                <div id="renderModalError">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Aceptar</button>
            </div>
        </div>

    </div>
</div>


<div class="modal fade " id="elegirResp" data-backdrop="static" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Seleccion un responsable</h4>
            </div>
            <div class="modal-body">
                <div class="form-group ">
                    <label for="cedula" class="col-md-2">Usuario</label>
                    <div class="col-md-10">
                        <input type="text" id="textoBusqueda" name="textoBusqueda" class="form-control" onkeyup="buscar('index2')">
                    </div>
                </div>

                <table class="table table-striped" id="modalElegir">
                    <thead>
                    <th>Nombre</th>
                    <th>Cédula</th>
                    <th>Seleccionar</th>
                    </thead>
                    <tbody id="tblResponsables">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


    @using (Html.BeginForm("IngresoResidente", "Residente", FormMethod.Post, new { id="formularioAlergias" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal" id="formularioIngreso">
    <h4>Ingresar un nuevo residente</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @name = "txtNombre" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", @name = "txtCedula" } })
            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Genero, new SelectList(Enum.GetValues(typeof(Dominio.Entidades.Genero))), "Seleccionar", new { htmlAttributes = new { @class = "form-control", @name = "txtGenero" } })
            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", @type = "Date", @name = "fecha" } })
            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mutualista, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mutualista, new { htmlAttributes = new { @class = "form-control", @name = "txtMutualista" } })
            @Html.ValidationMessageFor(model => model.Mutualista, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dieta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dieta, new { htmlAttributes = new { @class = "form-control", @name = "txtDieta" } })
            @Html.ValidationMessageFor(model => model.Dieta, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="row form-group">
        @Html.LabelFor(model => model.Alergias, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-2">
            <input type="text" class="form-control" id="ingresoAlergia" />
        </div>

        <div class="col-md-1">
            <span id="btnElegir" onclick="agregarAlergia()" class="btn btn-info glyphicon glyphicon-plus" aria-hidden="true"></span>

        </div>
    </div>

    <div class="col-md-12 col-md-offset-2">
        <div class="col-md-5 row" id="tablaAlergias"> </div>

    </div>

    <div class="row form-group">
        @Html.LabelFor(model => model.Condiciones, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-2">
            <input type="text" class="form-control" id="ingresoCondicion" />
        </div>

        <div class="col-md-1">
            <span id="btnElegir" onclick="agregarCondicion()" class="btn btn-info glyphicon glyphicon-plus" aria-hidden="true"></span>

        </div>
    </div>

    <div class="col-md-12 col-md-offset-2">
        <div class="col-md-5 row" id="tablaCondiciones"> </div>

    </div>



    <input type="text" hidden id="listaAlergias" name="listaAlergias" />
    <input type="text" hidden id="listaCondiciones" name="listaCondiciones" />

    <div class="form-group">
        @Html.LabelFor(model => model.ServicioFunebre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServicioFunebre, new { htmlAttributes = new { @class = "form-control", @name = "txtServicio" } })
            @Html.ValidationMessageFor(model => model.ServicioFunebre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <label for="txtRespCi" class="control-label col-md-2">CI Responsable:</label>
        <div class="col-md-2">
            @Html.EditorFor(model => model.ResponsableCI, new { htmlAttributes = new { @class = "form-control", @id = "txtRespCi", @readonly = true, @name = "txtRespCi" } })

        </div>
        <div class="col-md-1">
            <span id="btnElegir" onclick="BuscarResponsables()" class="btn btn-info glyphicon glyphicon-search" aria-hidden="true"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="btnIngresarRes" value="Confirmar" class="btn btn-default" />
        </div>
    </div>
</div>
    }

   

   

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        var alergias = [];
        var condiciones = [];

        function agregarAlergia() {

            if (!(/\d/.test($("#ingresoAlergia").val().trim())) && $("#ingresoAlergia").val().trim() != "") {

                var alergia = $("#ingresoAlergia").val().toUpperCase();               
                
                if (alergias.indexOf(alergia) <0) {
                   
                    $("#tablaAlergias").append(`<label class="col-md-offset-1" ><input type="checkbox" class="alerg"  value="${alergia}" checked/>
                                        ${alergia} </label>`);
                    alergias.push(alergia);
                    $("#ingresoAlergia").val("");
                                
                }               
            }        
        }


        function agregarCondicion() {

            if (!(/\d/.test($("#ingresoCondicion").val().trim())) && $("#ingresoCondicion").val().trim() != "") {

                var condicion = $("#ingresoCondicion").val().toUpperCase();

                if (condiciones.indexOf(condicion) < 0) {

                    $("#tablaCondiciones").append(`<label class="col-md-offset-1" ><input type="checkbox" class="condi"  value="${condicion}" checked/>
                                        ${condicion} </label>`);
                    condiciones.push(condicion);
                    $("#ingresoCondicion").val("");

                }
            }
        }

        function armarListas() {

            var listaA = "";
            var listaC = "";

            $(".alerg").each(function () {

                if ($(this).prop('checked')) {
                    listaA += $(this).val() + " | ";
                }

            });

            $(".condi").each(function () {

                if ($(this).prop('checked')) {
                    listaC += $(this).val() + " | ";
                }
            });
           
            listaA = listaA.substring(0, (listaA.length - 3));
            listaC = listaC.substring(0, (listaC.length - 3));
            $("#listaCondiciones").val(listaC);         
            $("#listaAlergias").val(listaA);           
            
        }

        $("#formularioAlergias").submit(function () {
            armarListas();

        })

        function BuscarResponsables() {
            $("#btnElegir").addClass("disabled");

            $.ajax({
                type: "GET",
                url: "BuscarResponsables",
                success: function (response) {
                    // obtengo lista de responsables activos

                    if (response.result != "error") {
                        var tablaHTML = "";
                        $.each(response.data, function (i, responsable) {

                            // traducción: una fila con 3 celdas: nombre, cedula y boton de elegir, que llama una funcion
                            // y manda la cedula y el nombre del elegido

                            tablaHTML += '<tr><td>' + responsable.Nombre + '</td><td>' +
                                responsable.Cedula + '</td><td><button class="btn btn-success" onclick="AsociarResp(\'' + responsable.Cedula + '\',\'' + responsable.Nombre + '\')" ><span class="glyphicon glyphicon-check"></span></button></td></tr>';
                        });

                        // muestro el modal con esa lista
                        $("#tblResponsables").html(tablaHTML);
                        $("#elegirResp").modal('show');
                    } else {
                        $("#renderModalError").html(`<p>${response.mensaje}</p>`);
                        $("#errorIngresoRes").modal('show');
                        $("#btnElegir").removeClass("disabled");
                    }
                }
            });
        }


        function AsociarResp(cedula, nombre) {
            $("#txtRespCi").val(cedula);
            $("#divInfoResponsable").append('<p>Nombre: ' + nombre + '</p>');
            $("#divInfoResponsable").append('<button id="btnQuitar" class="btn btn-danger" onclick="QuitarResp()"><span class="glyphicon glyphicon-remove"></span></button>');
            $("#elegirResp").modal("hide");
            $("#tblResponsables").html("");
        }

        function QuitarResp() {
            $("#txtRespCi").val("");
            $("#divInfoResponsable").html("");
            $("#btnElegir").removeClass("disabled");
            $("#btnQuitar").hide();
        }

        function buscar(texto) {

            let valor;
            let filas;
            let indice;
            let nombres;
            if (texto == 'index1') {
                valor = document.getElementById("textoBusquedaIndex1").value.toUpperCase();
                nombres = document.getElementById("tablaResidentes");
                filas = nombres.getElementsByTagName("tr");
                indice = 1;

            } else if (texto == 'index2') {
                valor = document.getElementById("textoBusqueda").value.toUpperCase();
                nombres = document.getElementById("tblResponsables");
                filas = nombres.getElementsByTagName("tr");
                indice = 1;
            }


            if (isNaN(valor)) { indice = 0 };

            for (let i = 0; i < filas.length; i++) {

                let columnaLenguaje = filas[i].getElementsByTagName("td")[indice];

                let lenguaje = columnaLenguaje.textContent;
                filas[i].style.display = lenguaje.toUpperCase().indexOf(valor) > -1 ? "" : "none";
            }
        }
        document.getElementById("textoBusqueda").addEventListener("keyup", buscar);

    </script>
</body>
</html>
